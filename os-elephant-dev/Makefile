BUILD_DIR = ./build
CROSS_COMPILE = ../toolchains/cross-tools/bin/loongarch64-unknown-linux-gnu-
AS = $(CROSS_COMPILE)as
CC = $(CROSS_COMPILE)gcc
LD = $(CROSS_COMPILE)ld
NM = $(CROSS_COMPILE)nm

CFLAGS = -O1 -g -DCONFIG_64BIT -DCONFIG_LOONGARCH64 -DCONFIG_VA_BITS_40 -DCONFIG_PAGE_SIZE_4KB -DCONFIG_PGTABLE_LEVELS=3 -Wall -march=loongarch64 -mabi=lp64s -ffreestanding -fno-common -nostdlib -fno-stack-protector -fno-pie -no-pie -Wno-address-of-packed-member -c \
	 -I ./include/ -I ./lib/ -I ./lib/kernel/ -I kernel/ -I ./thread/ -I ./userprog/ -I ./device/ -I ./fs/ -I ./kprobe/arch/loongarch/include -I ./kprobe/include -I ./bpf/include
AFLAGS = -O1 -g -DCONFIG_64BIT -DCONFIG_LOONGARCH64 -DCONFIG_VA_BITS_40 -DCONFIG_PAGE_SIZE_4KB -DCONFIG_PGTABLE_LEVELS=3 -nostdinc -D__ASSEMBLY__ -fno-PIE -march=loongarch64 -mabi=lp64s -G0 -pipe -msoft-float -mexplicit-relocs -ffreestanding -mno-check-zero-division -c -I ./include/
LDFLAGS = -m elf64loongarch --no-warn-rwx-segments -G0 -n -nostdlib

OBJS = $(BUILD_DIR)/head.o $(BUILD_DIR)/init.o $(BUILD_DIR)/setup.o $(BUILD_DIR)/ns16550a.o $(BUILD_DIR)/string.o \
	$(BUILD_DIR)/stdio.o $(BUILD_DIR)/stdio-kernel.o $(BUILD_DIR)/irq.o $(BUILD_DIR)/ioremap.c \
	$(BUILD_DIR)/env.o $(BUILD_DIR)/vsprintf.o $(BUILD_DIR)/ctype.o $(BUILD_DIR)/tlb.o $(BUILD_DIR)/tlbex.o \
	$(BUILD_DIR)/cache.o $(BUILD_DIR)/trap.o $(BUILD_DIR)/genex.o $(BUILD_DIR)/pgtable.o $(BUILD_DIR)/fault.o \
	$(BUILD_DIR)/mem.o $(BUILD_DIR)/memblock.o $(BUILD_DIR)/bitmap.o $(BUILD_DIR)/list.o $(BUILD_DIR)/debug.o \
	$(BUILD_DIR)/switch.o $(BUILD_DIR)/thread.o $(BUILD_DIR)/sync.o $(BUILD_DIR)/memory.o $(BUILD_DIR)/timer.o

$(BUILD_DIR)/head.o: boot/loongarch/head.S
	$(CC) $(AFLAGS) $< -o $@

$(BUILD_DIR)/setup.o: loongarch/setup.c
	$(CC) $(CFLAGS) $< -o $@

$(BUILD_DIR)/init.o: kernel/init.c
	$(CC) $(CFLAGS) $< -o $@

$(BUILD_DIR)/ns16550a.o: device/ns16550a.c
	$(CC) $(CFLAGS) $< -o $@

$(BUILD_DIR)/string.o: lib/string.c
	$(CC) $(CFLAGS) $< -o $@

$(BUILD_DIR)/stdio.o: lib/stdio.c
	$(CC) $(CFLAGS) $< -o $@

$(BUILD_DIR)/stdio-kernel.o: lib/kernel/stdio-kernel.c
	$(CC) $(CFLAGS) $< -o $@

$(BUILD_DIR)/irq.o: kernel/irq.c
	$(CC) $(CFLAGS) $< -o $@

$(BUILD_DIR)/ioremap.c: loongarch/ioremap.c
	$(CC) $(CFLAGS) $< -o $@

$(BUILD_DIR)/env.o: loongarch/env.c
	$(CC) $(CFLAGS) $< -o $@

$(BUILD_DIR)/vsprintf.o: loongarch/vsprintf.c
	$(CC) $(CFLAGS) $< -o $@

$(BUILD_DIR)/ctype.o: loongarch/ctype.c
	$(CC) $(CFLAGS) $< -o $@

$(BUILD_DIR)/tlb.o: loongarch/tlb.c
	$(CC) $(CFLAGS) $< -o $@

$(BUILD_DIR)/tlbex.o: loongarch/tlbex.S
	$(CC) $(AFLAGS) $< -o $@

$(BUILD_DIR)/cache.o: loongarch/cache.c
	$(CC) $(AFLAGS) $< -o $@

$(BUILD_DIR)/trap.o: loongarch/trap.c
	$(CC) $(CFLAGS) $< -o $@

$(BUILD_DIR)/genex.o: loongarch/genex.S
	$(CC) $(AFLAGS) $< -o $@

$(BUILD_DIR)/pgtable.o: loongarch/pgtable.c
	$(CC) $(CFLAGS) $< -o $@

$(BUILD_DIR)/fault.o: loongarch/fault.c
	$(CC) $(CFLAGS) $< -o $@

$(BUILD_DIR)/mem.o: loongarch/mem.c
	$(CC) $(CFLAGS) $< -o $@

$(BUILD_DIR)/memblock.o: mm/memblock.c
	$(CC) $(CFLAGS) $< -o $@

$(BUILD_DIR)/bitmap.o: lib/kernel/bitmap.c
	$(CC) $(CFLAGS) $< -o $@

$(BUILD_DIR)/list.o: lib/kernel/list.c
	$(CC) $(CFLAGS) $< -o $@

$(BUILD_DIR)/debug.o: kernel/debug.c
	$(CC) $(CFLAGS) $< -o $@

$(BUILD_DIR)/thread.o: thread/thread.c
	$(CC) $(CFLAGS) $< -o $@

$(BUILD_DIR)/sync.o: thread/sync.c
	$(CC) $(CFLAGS) $< -o $@

$(BUILD_DIR)/memory.o: mm/memory.c
	$(CC) $(CFLAGS) $< -o $@

$(BUILD_DIR)/switch.o: thread/switch_loongarch.S
	$(CC) $(AFLAGS) $< -o $@

$(BUILD_DIR)/timer.o: device/timer.c
	$(CC) $(CFLAGS) $< -o $@

KPROBE_OBJS = $(BUILD_DIR)kallsyms.o $(BUILD_DIR)/loongarch_kprobes.o $(BUILD_DIR)/kprobes.o \
		$(BUILD_DIR)/slot.o

$(BUILD_DIR)kallsyms.o: kprobe/kallsyms/kallsyms.c
	$(CC) $(CFLAGS) $< -o $@

$(BUILD_DIR)/loongarch_kprobes.o: kprobe/arch/loongarch/kprobes.c
	$(CC) $(CFLAGS) $< -o $@

$(BUILD_DIR)/kprobes.o: kprobe/kprobes.c
	$(CC) $(CFLAGS) $< -o $@

$(BUILD_DIR)/slot.o: kprobe/slot.c
	$(CC) $(CFLAGS) $< -o $@

# 指定源码和目标文件路径
SRC := loongarch/asm-offsets.c
OBJ := build/asm-offsets.s
OUT := include/asm-offsets.h

# sed 命令
define sed-y
	"/^->/{ \
	s:->#\(.*\):/* \1 */:; \
	s:^->\([^ ]*\) \([^ ]*\) \(.*\):#define \1 \2 /* \3 */:; \
	s:->::; p; \
	}"
endef

# 生成 asm-offsets.s 文件
$(OBJ): $(SRC)
	mkdir -p $(dir $@)
	$(CC) $(CFLAGS) -S -o $@ $<

# 生成 asm-offsets.h 文件
$(OUT): $(OBJ)
	@echo Generating $@ 
	@{ \
	set -e; \
	echo "#ifndef _OFFSETS_H"; \
	echo "#define _OFFSETS_H"; \
	echo ""; \
	echo "/**"; \
	echo " * DO NOT MODIFY."; \
	echo " *"; \
	echo " * This file was generated by Makefile"; \
	echo " *"; \
	echo " */"; \
	echo ""; \
	sed -ne $(sed-y) $<; \
	echo ""; \
	echo "#endif"; \
	} > $@

clean:
	rm include/asm-offsets.h; cd $(BUILD_DIR) && rm -rf ./* && if [ -e hd*.img  ];then rm ../*.img;fi

build_dir:
	mkdir -p $(BUILD_DIR)

build: $(BUILD_DIR)/kernel.elf

all: build_dir clean $(OUT) build

# 生成kallsyms符号表

.tmp_loong1: $(OBJS) $(KPROBE_OBJS)
	$(LD) --no-undefined -X --build-id -o .tmp_loong1 -T script/kernel.ld $(OBJS) $(KPROBE_OBJS)

.tmp_loong1.map: .tmp_loong1
	$(NM) -n .tmp_loong1 > .tmp_loong1.map

kallsyms_tool: script/kallsyms.c
	gcc script/kallsyms.c -o script/kallsyms

.tmp_kallsyms1.S: kallsyms_tool .tmp_loong1.map
	script/kallsyms --all-symbols .tmp_loong1.map > .tmp_kallsyms1.S

.tmp_kallsyms1.o: .tmp_kallsyms1.S
	$(CC) $(AFLAGS) .tmp_kallsyms1.S -o .tmp_kallsyms1.o

.tmp_loong2.map: .tmp_loong2
	$(NM) -n .tmp_loong2 > .tmp_loong2.map

.tmp_kallsyms2.S: kallsyms_tool .tmp_loong2.map
	script/kallsyms --all-symbols .tmp_loong2.map > .tmp_kallsyms2.S

.tmp_kallsyms2.o: .tmp_kallsyms2.S
	$(CC) $(AFLAGS) .tmp_kallsyms2.S -o .tmp_kallsyms2.o

.tmp_loong2: .tmp_kallsyms1.o $(OBJS) $(KPROBE_OBJS)
	$(LD) $(LDFLAGS) -T ./script/kernel.ld $^ -o $@

$(BUILD_DIR)/kernel.elf: .tmp_kallsyms2.o $(OBJS) $(KPROBE_OBJS)
	$(LD) $(LDFLAGS) -T ./script/kernel.ld $^ -o $@
